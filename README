This is an example of using the Signpost OAuth library in and Android application. It provides the 
basics of authentication via the Twitter OAuth service, then allows the student to enter Twitter 
messages into the authenticated user's stream.

You have to register your application with Twitter to get the Consumer Key and Secret. I still (recently) had to
enter a real, actual URL as the app's callback on the Twitter dev site. But you still pass the app's callback during
the OAuth process, just like always.

You will need to supply a MyKeysProvider.java class or rename the default one that looks something like this:

public class DefaultKeysProvider implements KeysProvider {

    @Override
    public String getKey1() {
        // TODO: Set this to your App's Consumer key
        return "Your App's Consumer Key";
    }

    @Override
    public String getKey2() {
        // TODO: Set this to your App's Consumer secret
        return "App Consumer Secret";
    }
}

This software is the result of the work of many others that I researched and is intended for educational 
purposes. This software is not intended to be a complete implementation. 

Unless find a BUG in this code, please don't ask questions about Signpost, how to get your app running or 
anything else.

Copyright 2013 - Brion N. Emde
